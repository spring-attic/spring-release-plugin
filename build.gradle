buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'nebula.plugin-plugin' version '5.6.0'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'com.github.hierynomus.license'

repositories {
    jcenter()
}

group = 'io.spring.gradle'
description = 'Provides healthy defaults for a Spring release'

contacts {
    'jkschneider@gmail.com' {
        moniker 'Jon Schneider'
        github 'jkschneider'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    plugin.description = 'The compile dependencies for the plugin, excluding the local dependencies to avoid problems with Shadow'
    compile.extendsFrom plugin
}

dependencies {
    plugin 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    plugin 'com.netflix.nebula:nebula-core:latest.release'
    plugin 'com.netflix.nebula:nebula-publishing-plugin:latest.release'
    plugin 'com.netflix.nebula:nebula-release-plugin:latest.release'
    plugin 'com.netflix.nebula:gradle-contacts-plugin:latest.release'
    plugin 'com.netflix.nebula:gradle-info-plugin:latest.release'

    plugin 'io.spring.gradle:spring-bintray-plugin:0.7.0'
    plugin('org.jfrog.buildinfo:build-info-extractor-gradle:latest.release') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    plugin 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'

    testCompile 'com.netflix.nebula:nebula-test:latest.release'
}

pluginBundle {
    website = 'https://github.com/spring-gradle-plugins/spring-release-plugin'
    vcsUrl = 'https://github.com/spring-gradle-plugins/spring-release-plugin.git'
    description = project.description

    plugins {
        springProjectPlugin {
            id = 'io.spring.release'
            displayName = 'Spring release plugin'
            description = project.description
            tags = ['spring']
        }
    }

    mavenCoordinates {
        groupId = 'io.spring.gradle'
        artifactId = 'spring-release-plugin'
    }
}

bintray.pkg {
    repo = 'jars'
    userOrg = 'spring'
    websiteUrl = 'https://github.com/spring-gradle-plugins/spring-release-plugin'
    vcsUrl = 'https://github.com/spring-gradle-plugins/spring-release-plugin.git'
    issueTrackerUrl = 'https://github.com/spring-gradle-plugins/spring-release-plugin/issues'
    labels = ['gradle', 'spring']
}

license {
    header = file('gradle/licenseHeader.txt')
    exclude '**/*.tokens'
    mapping {
        kt = 'JAVADOC_STYLE'
    }
    sourceSets = project.sourceSets
    strictCheck = true
}

shadowJar {
    configurations = [project.configurations.plugin]
    classifier = null
    dependencies {
        include(dependency('cglib:cglib'))
        include(dependency('org.objenesis:objenesis'))
    }
    relocate 'net.sf.cglib', 'io.spring.gradle.release.net.sf.cglib'
    relocate 'org.objenesis', 'io.spring.gradle.release.org.objenesis'
}

jar.deleteAllActions()
jar.dependsOn shadowJar

publishing {
    publications {
        withType(MavenPublication) {
            pom.withXml {
                asNode()
                        .dependencies
                        .dependency
                        .findAll {
                            ['cglib', 'objenesis'].contains(it.artifactId.text())
                        }
                        .each { it.parent().remove(it) }
            }
        }
    }
}

bintray.pkg {
    version {
        gpg {
            sign = false
        }
    }
}